# Invocation command line:
# /opt/cpu2017/bin/harness/runcpu --rebuild --define smt=1 --define cores=1 --copies 1 --define gcc_dir=/usr --iterations 1 --noreportable --configfile tx2_llvm9_nojemalloc_saber-01.cfg --define bits=64 --define sockets=1 --tune base --noreportable --nopower --runmode rate --tune base --size refrate intrate
# output_root was not used for this run
############################################################################
#------------------------------------------------------------------------------
# SPEC CPU2017 config file for: LLVM / Linux / AMD64
#------------------------------------------------------------------------------
#
# Usage: (1) Copy this to a new name
#             cd $SPEC/config
#             cp Example-x.cfg myname.cfg
#        (2) Change items that are marked 'EDIT' (search for it)
#
# SPEC tested this config file with:
#    Compiler version(s):     LLVM9
#    Operating system(s):     Linux
#    Hardware:                AArch64
#
# If your system differs, this config file might not work.
# You might find a better config file at http://www.spec.org/cpu2017/results
#
# Compiler issues: Contact your compiler vendor, not SPEC.
# For SPEC help:   http://www.spec.org/cpu2017/Docs/techsupport.html
#------------------------------------------------------------------------------


#--------- Label --------------------------------------------------------------
# Arbitrary string to tag binaries (no spaces allowed)
#                  Two Suggestions: # (1) EDIT this label as you try new ideas.
%define label google-llvm9                # (2)      Use a label meaningful to *you*.


#--------- Preprocessor -------------------------------------------------------
%ifndef %{bits}                # EDIT to control 32 or 64 bit compilation.  Or,
%   define  bits        64     #      you can set it on the command line using:
%endif                         #      'runcpu --define bits=nn'

%ifndef %{build_ncpus}         # EDIT to adjust number of simultaneous compiles.
%   define  build_ncpus 64      #      Or, you can set it on the command line:
%endif                         #      'runcpu --define build_ncpus=nn'

# Don't change this part.
%define  os          LINUX
%if %{bits} == 64
%   define model        -m64
%elif %{bits} == 32
%   define model        -m32
%else
%   error Please define number of bits - see instructions in config file
%endif
%if %{label} =~ m/ /
%   error Your label "%{label}" contains spaces.  Please try underscores instead.
%endif
%if %{label} !~ m/^[a-zA-Z0-9._-]+$/
%   error Illegal character in label "%{label}".  Please use only alphanumerics, underscore, hyphen, and period.
%endif

strict_rundir_verify = 0
verify_binaries      = no

#setup submit depending on single/dual socket
%ifndef %{sockets}
%   define sockets 2
%endif
%ifndef %{cores}
%   define cores 64
%endif

%if %{cores} == 1
% define   Use1PerCore 1
% define   Use2PerCore 2
% if %{smt} == 1
%  define   UseMaxPerCore 1
%  define   Use2PerCore 1
   submit = numactl --localalloc -C $SPECCOPYNUM $command
% elif %{smt} == 2
%  define   UseMaxPerCore 2
   submit = n=$SPECCOPYNUM ; ID=\$[\$n%2] ; CPU=\$[\$n/2+\$ID*32] ; numactl --localalloc -C \$CPU $command
% elif %{smt} == 4
%  define   UseMaxPerCore 4
   submit = n=$SPECCOPYNUM ; ID=\$[\$n%4] ; CPU=\$[\$n/4+\$ID*32] ; numactl --localalloc -C \$CPU $command
% endif
%elif %{cores} == 4
% define   Use1PerCore 4
% define   Use2PerCore 8
% if %{smt} == 1
%  define   UseMaxPerCore 4
%  define   Use2PerCore 4
   submit = numactl --localalloc -C $SPECCOPYNUM $command
% elif %{smt} == 2
%  define   UseMaxPerCore 8
   submit = n=$SPECCOPYNUM ; ID=\$[\$n%2] ; CPU=\$[\$n/2+\$ID*32] ; numactl --localalloc -C \$CPU $command
% elif %{smt} == 4
%  define   UseMaxPerCore 16
   submit = n=$SPECCOPYNUM ; ID=\$[\$n%4] ; CPU=\$[\$n/4+\$ID*32] ; numactl --localalloc -C \$CPU $command
% endif
%elif %{cores} == 8
% define   Use1PerCore 8
% define   Use2PerCore 16
% if %{smt} == 1
%  define   UseMaxPerCore 8
%  define   Use2PerCore 8
   submit = numactl --localalloc -C $SPECCOPYNUM $command
% elif %{smt} == 2
%  define   UseMaxPerCore 16
   submit = n=$SPECCOPYNUM ; ID=\$[\$n%2] ; CPU=\$[\$n/2+\$ID*32] ; numactl --localalloc -C \$CPU $command
% elif %{smt} == 4
%  define   UseMaxPerCore 32
   submit = n=$SPECCOPYNUM ; ID=\$[\$n%4] ; CPU=\$[\$n/4+\$ID*32] ; numactl --localalloc -C \$CPU $command
% endif
%elif %{cores} == 16
% define   Use1PerCore 16
% define   Use2PerCore 32
% if %{smt} == 1
%  define   UseMaxPerCore 16
%  define   Use2PerCore 16
   submit = numactl --localalloc -C $SPECCOPYNUM $command
% elif %{smt} == 2
%  define   UseMaxPerCore 32
   submit = n=$SPECCOPYNUM ; ID=\$[\$n%2] ; CPU=\$[\$n/2+\$ID*32] ; numactl --localalloc -C \$CPU $command
% elif %{smt} == 4
%  define   UseMaxPerCore 64
   submit = n=$SPECCOPYNUM ; ID=\$[\$n%4] ; CPU=\$[\$n/4+\$ID*32] ; numactl --localalloc -C \$CPU $command
% endif
%else
% if %{sockets} == 1 || %{cores} == 32
%  define   cores  32
%  define   Use1PerCore  32
%  define   Use2PerCore  64
%  if %{smt} == 1
%   define   Use2PerCore   32
%   define   UseMaxPerCore  32
%  elif %{smt} == 2
%   define   UseMaxPerCore 64
%  elif %{smt} == 4
%   define   UseMaxPerCore 128
%  endif
   submit = numactl --localalloc -C $SPECCOPYNUM $command
% else
%  define   Use1PerCore  64
%  define   Use2PerCore  128
%  if %{smt} == 1
%   define   Use2PerCore   64
%   define   UseMaxPerCore   64
    submit = n=$SPECCOPYNUM ; CORE=\$[\$n/2+\$n%2*32] ; numactl --localalloc -C \$CORE $command
%  elif %{smt} == 2
%   define   UseMaxPerCore   128
    submit = n=$SPECCOPYNUM ; CORE=\$[\$n/2+\$n%2*64] ; numactl --localalloc -C \$CORE $command
%  elif %{smt} == 4
%   define   UseMaxPerCore   256
    submit = n=$SPECCOPYNUM ; CORE=\$[\$n/2+\$n%2*128] ; numactl --localalloc -C \$CORE $command
%  endif
% endif
%endif

#--------- Global Settings ----------------------------------------------------
# For info, see:
#            https://www.spec.org/cpu2017/Docs/config.html#fieldname
#   Example: https://www.spec.org/cpu2017/Docs/config.html#tune

flagsurl000             = ./gcc-arm.xml
flagsurl001             = ./llvm.xml
ignore_errors           = 1
iterations              = 1
label                   = %{label}-m%{bits}
line_width              = 1020
log_line_width          = 1020
makeflags               = --jobs=%{build_ncpus}
mean_anyway             = 1
output_format           = txt,html,cfg,pdf,csv
preenv                  = 1
tune                    = base,peak

#--------- Monitoring  -----------------------------------------------------
# Run perf or other monitors in the background,
# make sure monitoring process is dead at end of the run,
# save to file based on benchmark name

%ifndef %{monitor_socmon}
% define monitor_socmon 0
%endif
%if %{monitor_socmon} == 1
  monitor_pre_bench = socmon -D > /dev/null 2>&1 &
  monitor_post_bench = sudo killall socmon_tool ; sleep 1 ; mv freq_dump.csv /opt/cpu2017/result/socmon_${lognum}_${benchmark}_${tune}_it${iter}_wrkld${workload}.csv
%endif

%ifndef %{monitor_perf}
% define monitor_perf 0
%endif
#%ifndef %{per_core}
#% define per_core 0
#%endif
%if %{monitor_perf} == 1
% ifndef %{monitor_events}
%  define monitor_events stalled-cycles-backend,dTLB-load-misses,instructions,cycles
% endif
% ifndef %{monitor_threads}
%  define monitor_threads 1
% endif
monitor_pre_bench = bash -c "sudo perf stat -a -I 1000 -x , -e %{monitor_events} -o ${top}/result/perf_${baseexe}_${workload}_log_${lognum}_${tune}_iter_${iter}.csv sleep 100000 &" && echo "running perf to ${top}/result/perf_${baseexe}_${workload}_log_${lognum}_${tune}_iter_${iter}.csv"
monitor_post_bench = sudo killall sleep ; sleep 1 ; sudo killall perf ; echo "perf done"
%endif

#--------- How Many CPUs? -----------------------------------------------------
# Both SPECrate and SPECspeed can test multiple chips / cores / hw threads
#    - For SPECrate,  you set the number of copies.
#    - For SPECspeed, you set the number of threads.
# See: https://www.spec.org/cpu2017/Docs/system-requirements.html#MultipleCPUs
#
#    q. How many should I set?
#    a. Unknown, you will have to try it and see!
#
# To get you started:
#
#     copies - This config file sets 1 copy per core (after you set the
#              'cpucores' variable, just below).
#              Please be sure you have enough memory; if you do not, you might
#              need to run a smaller number of copies.  See:
#              https://www.spec.org/cpu2017/Docs/system-requirements.html#memory
#
#     threads - This config file sets a starting point.  You can try adjusting it.
#               Higher thread counts are much more likely to be useful for
#               fpspeed than for intspeed.
#
#
# To do so, please adjust these; also adjust the 'numactl' lines, below

                               # EDIT to define system sizes
#%define  cpucores       4      #         number of physical cores
#%define  cputhreads     8      #         number of logical cores
#%define  numanodes      1      #         number of NUMA nodes for affinity

#intrate,fprate:
#   copies                  = %{cpucores}
#intspeed,fpspeed:
#   threads                 = %{cputhreads}

intrate:
        copies  = %{UseMaxPerCore}

fprate:
        copies  = %{Use2PerCore}

intspeed:
        threads = %{UseMaxPerCore}

fpspeed:
        threads = %{Use2PerCore}

#------- Compilers ------------------------------------------------------------

default:
#                                      EDIT paths to LLVM and libraries:
    BASE_DIR           = /opt
    # LLVM_PATH specifies the directory path containing required LLVM files and
    # potentially multiple LLVM versions.
    LLVM_PATH          = $[BASE_DIR]/flang
    # LLVM_ROOT_PATH specifies the directory path to the LLVM version to be
    # used. EDIT: Change llvm-v390 to appropriate directory name.
    LLVM_ROOT_PATH     = $[LLVM_PATH]/10.0.1
    #LLVM_ROOT_PATH     = /llvm/9.0.0
    LLVM_BIN_PATH      = $[LLVM_ROOT_PATH]/bin
    LLVM_LIB_PATH      = $[LLVM_ROOT_PATH]/lib:$[LLVM_ROOT_PATH]/lib64
    LLVM_INCLUDE_PATH  = $[LLVM_ROOT_PATH]/include
    #LLVM_GCC_DIR       = $[LLVM_PATH]/gcc-4.8.2
    #GFORTRAN_DIR       = $[LLVM_GCC_DIR]/bin
    GFORTRAN_DIR        = $[LLVM_BIN_PATH]
    OPENMP_DIR         = $[LLVM_ROOT_PATH]

    preENV_PATH             = $[LLVM_BIN_PATH]:%{ENV_PATH}

    CC                  = $(LLVM_BIN_PATH)/clang %{model}
    CXX                 = $(LLVM_BIN_PATH)/clang++ %{model}
    FORTRAN_COMP        = $(GFORTRAN_DIR)/flang
    FC                  = $(FORTRAN_COMP) %{model}
    CLD                 = $(LLVM_BIN_PATH)/clang %{model}
    FLD                 = $(GFORTRAN_DIR)/flang %{model}
    # How to say "Show me your version, please"
    CC_VERSION_OPTION   = -v
    CXX_VERSION_OPTION  = -v
    FC_VERSION_OPTION   = -v

default:
%if %{bits} == 64
   sw_base_ptrsize = 64-bit
   sw_peak_ptrsize = Not Applicable
%else
   sw_base_ptrsize = 32-bit
   sw_peak_ptrsize = 32-bit
%endif

intrate,intspeed:                     # 502.gcc_r and 602.gcc_s may need the
%if %{bits} == 32                     # flags from this section.  For 'base',
    EXTRA_COPTIMIZE = -fgnu89-inline  # all benchmarks must use the same
%else                                 # options, so we add them to all of
    LDCFLAGS        = -z muldefs      # integer rate and integer speed.  See:
%endif                                # www.spec.org/cpu2017/Docs/benchmarks/502.gcc_r.html

#--------- Portability --------------------------------------------------------
default:# data model applies to all benchmarks
%if %{bits} == 32
    # Strongly recommended because at run-time, operations using modern file
    # systems may fail spectacularly and frequently (or, worse, quietly and
    # randomly) if a program does not accommodate 64-bit metadata.
    EXTRA_PORTABILITY = -D_FILE_OFFSET_BITS=64
%else
    EXTRA_PORTABILITY = -DSPEC_LP64
%endif

# Benchmark-specific portability (ordered by last 2 digits of bmark number)

500.perlbench_r,600.perlbench_s:  #lang='C'
%if %{bits} == 32
%   define suffix AARCH32
%else
%   define suffix AARCH64
%endif
   PORTABILITY    = -DSPEC_%{os}_%{suffix}

507.cactuBSSN_r:
   PORTABILITY    = -lflang

510.parest_r:
   CXXPORTABILITY = -std=gnu++03

521.wrf_r,621.wrf_s:  #lang='F,C'
   CPORTABILITY = -DSPEC_CASE_FLAG
   FPORTABILITY  = -fconvert=big-endian
   PORTABILITY = -Mbyteswapio

523.xalancbmk_r,623.xalancbmk_s:  #lang='CXX'
   PORTABILITY   = -DSPEC_%{os}

526.blender_r:  #lang='CXX,C'
    CPORTABILITY = -funsigned-char
    CXXPORTABILITY = -D__BOOL_DEFINED

527.cam4_r,627.cam4_s:  #lang='F,C'
   PORTABILITY   = -DSPEC_CASE_FLAG

628.pop2_s:  #lang='F,C'
    CPORTABILITY = -DSPEC_CASE_FLAG
    FPORTABILITY = -fconvert=big-endian

#--------  Baseline Tuning Flags ----------------------------------------------
default=base:
    COPTIMIZE     = -mcpu=thunderx3t110 -O3 -fPIE -mpie-copy-relocations -fno-omit-frame-pointer -fno-strict-aliasing
    CXXOPTIMIZE   = -mcpu=thunderx3t110 -O3 -fPIE -mpie-copy-relocations -fno-omit-frame-pointer -fno-strict-aliasing
    FOPTIMIZE     = -mcpu=thunderx3t110 -O3 -fPIE -fno-omit-frame-pointer -fno-strict-aliasing
    LDOPTIMIZE    = -z muldefs
intrate,fprate:
    preENV_LIBRARY_PATH     = $[LLVM_LIB_PATH]
    preENV_LD_LIBRARY_PATH  = $[LLVM_LIB_PATH]
   #preENV_LIBRARY_PATH     = $[LLVM_LIB_PATH]:%{ENV_LIBRARY_PATH}
   #preENV_LD_LIBRARY_PATH  = $[LLVM_LIB_PATH]:%{ENV_LD_LIBRARY_PATH}

#
# Speed (OpenMP and Autopar allowed)
#
%if %{bits} == 32
   intspeed,fpspeed:
   #
   # Many of the speed benchmarks (6nn.benchmark_s) do not fit in 32 bits
   # If you wish to run SPECint2017_speed or SPECfp2017_speed, please use
   #
   #     runcpu --define bits=64
   #
   fail_build = 1
%else
   intspeed,fpspeed:
       #OPENMP_LIB_PATH          = $[OPENMP_DIR]/lin_32e/lib
       EXTRA_OPTIMIZE           = -DSPEC_OPENMP -fopenmp #-Wno-return-type -DUSE_OPENMP -I $(OPENMP_DIR)/common/include
       #EXTRA_LIBS               = -fopenmp=libomp -L$(OPENMP_LIB_PATH) -lomp
       #EXTRA_FLIBS              = -fopenmp=libomp -lgfortran -lm
       #preENV_LIBRARY_PATH      = $[LLVM_LIB_PATH]:$[OPENMP_LIB_PATH]
       #preENV_LD_LIBRARY_PATH   = $[LLVM_LIB_PATH]:$[OPENMP_LIB_PATH]
       #preENV_LIBRARY_PATH      = $[LLVM_LIB_PATH]:$[OPENMP_LIB_PATH]:%{ENV_LIBRARY_PATH}
       #preENV_LD_LIBRARY_PATH   = $[LLVM_LIB_PATH]:$[OPENMP_LIB_PATH]:%{ENV_LD_LIBRARY_PATH}
       #preENV_OMP_THREAD_LIMIT  = %{cputhreads}
       preENV_OMP_STACKSIZE     = 120M
       #preENV_GOMP_CPU_AFFINITY = 0-%{cputhreads}
%endif

#--------  Peak Tuning Flags ----------------------------------------------
default=peak:
    COPTIMIZE     = -mcpu=thunderx3t110 -O3 -fPIE -mpie-copy-relocations -fno-omit-frame-pointer -fno-strict-aliasing
    CXXOPTIMIZE   = -mcpu=thunderx3t110 -O3 -fPIE -mpie-copy-relocations -fno-omit-frame-pointer -fno-strict-aliasing
    FOPTIMIZE     = -mcpu=thunderx3t110 -O3 -fPIE -fno-omit-frame-pointer -fno-strict-aliasing
    #EXTRA_FLIBS   = -lgfortran -lm

#------------------------------------------------------------------------------
# Tester and System Descriptions - EDIT all sections below this point
#------------------------------------------------------------------------------
#   For info about any field, see
#             https://www.spec.org/cpu2017/Docs/config.html#fieldname
#   Example:  https://www.spec.org/cpu2017/Docs/config.html#hw_memory
#-------------------------------------------------------------------------------

#--------- EDIT to match your version -----------------------------------------
default:
        sw_compiler000   = C/C++: clang version 9.0.0
sw_compiler001 = (https://github.com/flang-compiler/flang-driver.git
sw_compiler002 = 737fb162c06d49d8d58edde113093a8aa7ab826a)
sw_compiler003 = (git@github.com:MarvellServer/ThunderX-Toolchain-CT-LLVM-9.git
sw_compiler004 = f7073b100497af0e16286cfc1d7499be899725d4)
        sw_compiler005   = Clang C Language Family Frontend for LLVM
        sw_compiler006   = Fortran: GNU Fortran (Ubuntu/Linaro
sw_compiler007 = 8.4.0-1ubuntu1~19.10) 8.4.0
        sw_compiler008   = GNU Compiler Collection
        notes_submit_000 = The numactl mechanism was used to bind copies to processors. The config file option 'submit'
        notes_submit_005 = was used to generate numactl commands to bind each copy to a specific processor.
        notes_submit_010 = For details, please see the config file.
        notes_os_000 = Stack size set to unlimited using "ulimit -s unlimited"
        notes_os_005 = Prior to runcpu invocation
        notes_os_010 = Transparent Huge Pages enabled with:
        notes_os_015 = echo always > /sys/kernel/mm/transparent_hugepage/enabled

#--------- EDIT info about you ------------------------------------------------
# To understand the difference between hw_vendor/sponsor/tester, see:
#     https://www.spec.org/cpu2017/Docs/config.html#test_sponsor
intrate,intspeed,fprate,fpspeed: # Important: keep this line
   hw_vendor          = Marvell Semiconductor Inc.
   tester             = Marvell Semiconductor Inc.
   test_sponsor       = Marvell Semiconductor Inc.
   license_num        = 2936

#--------- EDIT system availability dates -------------------------------------
intrate,intspeed,fprate,fpspeed: # Important: keep this line
   hw_avail           = Jun-2020
   sw_avail           = Jun-2020

#--------- EDIT system information --------------------------------------------
intrate,intspeed,fprate,fpspeed: # Important: keep this line
   hw_cpu_name        = CN9980-2200LG4077-Y22-G
   hw_cpu_nominal_mhz = 2200
   hw_cpu_max_mhz     = 2500
   hw_model           = Cavium ThunderX2(R) CPU CN9980 v2.2 @ 2.20GHz
%if %{sockets} == 1
   hw_nchips          = 1
   hw_ncpuorder       = 1 chip(s)
%else
   hw_nchips          = 2
   hw_ncpuorder       = 1, 2 chip(s)
%endif
   hw_ncores          = 1

%if %{smt} == 1
   hw_nthreadspercore = 1
%elif %{smt} == 2
   hw_nthreadspercore = 2
%else
   hw_nthreadspercore = 4
%endif
   hw_other           = None

   hw_memory000       = 256 GB (16 x 16 GB 2Rx4 PC4-2666V-R)

   hw_pcache          = 32 KB I + 32 KB D on chip per core
   hw_scache          = 256 KB I+D on chip per core
   hw_tcache          = 32 MB I+D on chip per chip
   hw_ocache          = None

   fw_bios            = TX2-FW-Release-7.4.1-build_03
   hw_disk001         = Unknown


# The following settings were obtained by running the sysinfo_program
# 'specperl $[top]/bin/sysinfo' (sysinfo:SHA:1b187da62efa5d65f0e989c214b6a257d16a31d3cf135973c9043da741052207)
default:
notes_plat_sysinfo_000 =
notes_plat_sysinfo_005 = Sysinfo program /opt/cpu2017/bin/sysinfo
notes_plat_sysinfo_010 = Rev: r6365 of 2019-08-21 295195f888a3d7edb1e6e46a485a0011
notes_plat_sysinfo_015 = running on saber-01 Mon Jun 22 16:29:27 2020
notes_plat_sysinfo_020 =
notes_plat_sysinfo_025 = SUT (System Under Test) info as seen by some common utilities.
notes_plat_sysinfo_030 = For more information on this section, see
notes_plat_sysinfo_035 =    https://www.spec.org/cpu2017/Docs/config.html#sysinfo
notes_plat_sysinfo_040 =
notes_plat_sysinfo_045 = From /proc/cpuinfo
notes_plat_sysinfo_050 = *
notes_plat_sysinfo_055 = * Did not identify cpu model.  If you would
notes_plat_sysinfo_060 = * like to write your own sysinfo program, see
notes_plat_sysinfo_065 = * www.spec.org/cpu2017/config.html#sysinfo
notes_plat_sysinfo_070 = *
notes_plat_sysinfo_075 = *
notes_plat_sysinfo_080 = * 0 "physical id" tags found.  Perhaps this is an older system,
notes_plat_sysinfo_085 = * or a virtualized system.  Not attempting to guess how to
notes_plat_sysinfo_090 = * count chips/cores for this system.
notes_plat_sysinfo_095 = *
notes_plat_sysinfo_100 =       64 "processors"
notes_plat_sysinfo_105 =    cores, siblings (Caution: counting these is hw and system dependent. The following
notes_plat_sysinfo_110 =    excerpts from /proc/cpuinfo might not be reliable.  Use with caution.)
notes_plat_sysinfo_115 =
notes_plat_sysinfo_120 = From lscpu:
notes_plat_sysinfo_125 =      Architecture:                    aarch64
notes_plat_sysinfo_130 =      CPU op-mode(s):                  64-bit
notes_plat_sysinfo_135 =      Byte Order:                      Little Endian
notes_plat_sysinfo_140 =      CPU(s):                          64
notes_plat_sysinfo_145 =      On-line CPU(s) list:             0-63
notes_plat_sysinfo_150 =      Thread(s) per core:              1
notes_plat_sysinfo_155 =      Core(s) per socket:              32
notes_plat_sysinfo_160 =      Socket(s):                       2
notes_plat_sysinfo_165 =      NUMA node(s):                    2
notes_plat_sysinfo_170 =      Vendor ID:                       Cavium
notes_plat_sysinfo_175 =      Model:                           2
notes_plat_sysinfo_180 =      Model name:                      ThunderX2 99xx
notes_plat_sysinfo_185 =      Stepping:                        0x1
notes_plat_sysinfo_190 =      BogoMIPS:                        400.00
notes_plat_sysinfo_195 =      L1d cache:                       2 MiB
notes_plat_sysinfo_200 =      L1i cache:                       2 MiB
notes_plat_sysinfo_205 =      L2 cache:                        16 MiB
notes_plat_sysinfo_210 =      L3 cache:                        64 MiB
notes_plat_sysinfo_215 =      NUMA node0 CPU(s):               0-31
notes_plat_sysinfo_220 =      NUMA node1 CPU(s):               32-63
notes_plat_sysinfo_225 =      Vulnerability Itlb multihit:     Not affected
notes_plat_sysinfo_230 =      Vulnerability L1tf:              Not affected
notes_plat_sysinfo_235 =      Vulnerability Mds:               Not affected
notes_plat_sysinfo_240 =      Vulnerability Meltdown:          Not affected
notes_plat_sysinfo_245 =      Vulnerability Spec store bypass: Vulnerable
notes_plat_sysinfo_250 =      Vulnerability Spectre v1:        Mitigation; __user pointer sanitization
notes_plat_sysinfo_255 =      Vulnerability Spectre v2:        Vulnerable
notes_plat_sysinfo_260 =      Vulnerability Srbds:             Not affected
notes_plat_sysinfo_265 =      Vulnerability Tsx async abort:   Not affected
notes_plat_sysinfo_270 =      Flags:                           fp asimd evtstrm aes pmull sha1 sha2 crc32 atomics
notes_plat_sysinfo_275 =      cpuid asimdrdm
notes_plat_sysinfo_280 =
notes_plat_sysinfo_285 = From numactl --hardware  WARNING: a numactl 'node' might or might not correspond to a
notes_plat_sysinfo_290 = physical chip.
notes_plat_sysinfo_295 =   available: 2 nodes (0-1)
notes_plat_sysinfo_300 =   node 0 cpus: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
notes_plat_sysinfo_305 =   28 29 30 31
notes_plat_sysinfo_310 =   node 0 size: 128851 MB
notes_plat_sysinfo_315 =   node 0 free: 125739 MB
notes_plat_sysinfo_320 =   node 1 cpus: 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56
notes_plat_sysinfo_325 =   57 58 59 60 61 62 63
notes_plat_sysinfo_330 =   node 1 size: 128506 MB
notes_plat_sysinfo_335 =   node 1 free: 127906 MB
notes_plat_sysinfo_340 =   node distances:
notes_plat_sysinfo_345 =   node   0   1
notes_plat_sysinfo_350 =     0:  10  20
notes_plat_sysinfo_355 =     1:  20  10
notes_plat_sysinfo_360 =
notes_plat_sysinfo_365 = From /proc/meminfo
notes_plat_sysinfo_370 =    MemTotal:       263534104 kB
notes_plat_sysinfo_375 =    HugePages_Total:       0
notes_plat_sysinfo_380 =    Hugepagesize:       2048 kB
notes_plat_sysinfo_385 =
notes_plat_sysinfo_390 = /usr/bin/lsb_release -d
notes_plat_sysinfo_395 =    Ubuntu 20.04 LTS
notes_plat_sysinfo_400 =
notes_plat_sysinfo_405 = From /etc/*release* /etc/*version*
notes_plat_sysinfo_410 =    debian_version: bullseye/sid
notes_plat_sysinfo_415 =    os-release:
notes_plat_sysinfo_420 =       NAME="Ubuntu"
notes_plat_sysinfo_425 =       VERSION="20.04 LTS (Focal Fossa)"
notes_plat_sysinfo_430 =       ID=ubuntu
notes_plat_sysinfo_435 =       ID_LIKE=debian
notes_plat_sysinfo_440 =       PRETTY_NAME="Ubuntu 20.04 LTS"
notes_plat_sysinfo_445 =       VERSION_ID="20.04"
notes_plat_sysinfo_450 =       HOME_URL="https://www.ubuntu.com/"
notes_plat_sysinfo_455 =       SUPPORT_URL="https://help.ubuntu.com/"
notes_plat_sysinfo_460 =
notes_plat_sysinfo_465 = uname -a:
notes_plat_sysinfo_470 =    Linux saber-01 5.4.0-37-generic #41-Ubuntu SMP Wed Jun 3 17:57:16 UTC 2020 aarch64
notes_plat_sysinfo_475 =    aarch64 aarch64 GNU/Linux
notes_plat_sysinfo_480 =
notes_plat_sysinfo_485 = Kernel self-reported vulnerability status:
notes_plat_sysinfo_490 =
notes_plat_sysinfo_495 = itlb_multihit:                            Not affected
notes_plat_sysinfo_500 = CVE-2018-3620 (L1 Terminal Fault):        Not affected
notes_plat_sysinfo_505 = Microarchitectural Data Sampling:         Not affected
notes_plat_sysinfo_510 = CVE-2017-5754 (Meltdown):                 Not affected
notes_plat_sysinfo_515 = CVE-2018-3639 (Speculative Store Bypass): Vulnerable
notes_plat_sysinfo_520 = CVE-2017-5753 (Spectre variant 1):        Mitigation: __user pointer sanitization
notes_plat_sysinfo_525 = CVE-2017-5715 (Spectre variant 2):        Vulnerable
notes_plat_sysinfo_530 = srbds:                                    Not affected
notes_plat_sysinfo_535 = tsx_async_abort:                          Not affected
notes_plat_sysinfo_540 =
notes_plat_sysinfo_545 = run-level 5 Jun 22 14:40
notes_plat_sysinfo_550 =
notes_plat_sysinfo_555 = SPEC is set to: /opt/cpu2017
notes_plat_sysinfo_560 =    Filesystem     Type  Size  Used Avail Use% Mounted on
notes_plat_sysinfo_565 =    /dev/sdc1      ext4  733G  202G  494G  29% /mnt/ssd_800gb
notes_plat_sysinfo_570 =
notes_plat_sysinfo_575 = From /sys/devices/virtual/dmi/id
notes_plat_sysinfo_580 =     BIOS:    Cavium Inc. TX2-FW-Release-7.4-build_05 08/24/2019
notes_plat_sysinfo_585 =     Vendor:  Cavium Inc.
notes_plat_sysinfo_590 =     Product: Saber
notes_plat_sysinfo_595 =     Product Family: CN99XX
notes_plat_sysinfo_600 =
notes_plat_sysinfo_605 = Additional information from dmidecode follows.  WARNING: Use caution when you interpret
notes_plat_sysinfo_610 = this section. The 'dmidecode' program reads system data which is "intended to allow
notes_plat_sysinfo_615 = hardware to be accurately determined", but the intent may not be met, as there are
notes_plat_sysinfo_620 = frequent changes to hardware, firmware, and the "DMTF SMBIOS" standard.
notes_plat_sysinfo_625 =   Memory:
notes_plat_sysinfo_630 =     16x Micron Technology 18ASF2G72PDZ-2G6D1 16 GB 2 rank 2666
notes_plat_sysinfo_635 =
notes_plat_sysinfo_640 = (End of data from sysinfo program)
hw_cpu_name    = could not determine
hw_disk000     = 733 GB  add more disk info here
hw_memory001   = 251.326 GB fixme: If using DDR4, the format is:
hw_memory002   = 'N GB (N x N GB nRxn PC4-nnnnX-X)'
hw_nchips      = could not determine
prepared_by    = jenkins  (is never output, only tags rawfile)
sw_file        = ext4
sw_os000       = Ubuntu 20.04 LTS
sw_os001       = 5.4.0-37-generic
sw_state       = Run level 5 (add definition here)
# End of settings added by sysinfo_program

__HASH__
500.perlbench_r=base=google-llvm9-m64:
# Last updated 2020-10-06 13:01:48
opthash=56e79658a69ea73e661eea7caacd2da177be68e06198f0e89238634b0c1dab20
baggage=
compiler_version=\
@eNqdUD1TwzAM3fMrPMLgOGnSkIaFu/BxXSgHPdaeY6uJqGPn/NH252PaAgMbi6TTe096EmnbzfvD\
69ty9bxZvaxjahKhuO7JHqxDo0mepVmak6vB+8k1jPXoh9Clwoxs+0WksZpQgWVR5xwKem4rtR/p\
ZM0HCJ9GEanzueyEuBFzUZazWTbndV2U5bas80LAYiaqIlt0RXWdrLntwTeEcyuGqqRB77Q5aKpQ\
hyPtdUjWgwUuyWgkqIZMxuExWWrnuVIg79E2hA1mhFOgEt2OHQDZxc3F9+mwjOFZxjrUyaMJWhLB\
tUTJPZCntiUXnPv4jDg2OMsUdqwXgn37syAH7s/2WJ28gYpbQP5T3v6sH4PyGNkNSW/vxqr8nfwH\
+QRZA5n3
compile_options=\
@eNrVU21vmzAQ/s6vsPjukKhTpUWlEhAnsJHY4kXq9sWixKxeASNDtra/fmfyskTapEnrNs0ION+d\
/dw9d7dRLW6KR1HJWiDVDVK1/dzqBy3Lgetdu5WafxFaVs+uPbUtEHtwAXnydnptW1ZA12yObOdB\
NWL84K3sH52vQjqdVp9FOThVXbSf8Gw6gceRbT8Ude3cy9YpjQHh5voNwiXC6og/UQgvUkYC+G0W\
xM9XIDCSxDygCUE4msALMIMTUZDKrmidTAJ0KBPRHzVhto4xK3QvNKjE0+BoAULfiVIX7RauXNDc\
jwlPYy8NScoNYuTF7vSAzr08ozzNGUtImnLKyGbNwMZjL1kRvoxikp62ZsdTmicBMbpxS5fLlGTc\
j7LUhRwRpFp2O3d4AFqFfroaZjPAolcIVyyCY00nBS5V94y1qFVZjGSAsVVYNXLAlS4gyU7JdjA5\
Gf2+ULioZdFLIHO/DvHH0Sa/456XBOEIf25iRnPTq50uxa1tBXMUBO7vlnF/D/XfUZa59kVNbQva\
JGD5MvZWKdgu6ztafbIJQn5y+O8LblvUsMGyaB19JJDSn67+yCKjSeb5URxlH440XzbC6EXussTj\
P/RlxgVOvH+FsUb4BTW7eiuqft99f2EAziB/Ogc36t7k0N8a/7pBx/W9XxEamzlevMJQUHNPcGzs\
U3j/oD/GSM4Qz2L5tdYBStZeFoLaN7nUzYElmpuBP5v2b8Gi9cs=
exehash=3e3a76b291166afc0db0406b1c4cfdc3b7c69de0d23eec98cc8a336780f04e6b

502.gcc_r=base=google-llvm9-m64:
# Last updated 2020-10-06 13:16:33
opthash=ae4c598d0a4e52ee4d451698777b0b7b81a24da184614844019ad62a4de13631
baggage=
compiler_version=\
@eNqdUD1TwzAM3fMrPMLgOGnSkIaFu/BxXSgHPdaeY6uJqGPn/NH252PaAgMbi6TTe096EmnbzfvD\
69ty9bxZvaxjahKhuO7JHqxDo0mepVmak6vB+8k1jPXoh9Clwoxs+0WksZpQgWVR5xwKem4rtR/p\
ZM0HCJ9GEanzueyEuBFzUZazWTbndV2U5bas80LAYiaqIlt0RXWdrLntwTeEcyuGqqRB77Q5aKpQ\
hyPtdUjWgwUuyWgkqIZMxuExWWrnuVIg79E2hA1mhFOgEt2OHQDZxc3F9+mwjOFZxjrUyaMJWhLB\
tUTJPZCntiUXnPv4jDg2OMsUdqwXgn37syAH7s/2WJ28gYpbQP5T3v6sH4PyGNkNSW/vxqr8nfwH\
+QRZA5n3
compile_options=\
@eNrFU9FumzAUfecrLN4dyLpOWtRUAkITbwRbAaZtLxZ1zOoVMLNNt+7rZ0jokr2u3UCYK46595x7\
j1PZwqa855WoOZCdEbLVC0cbJZihqm/3QtEHrkT1uHR917GhtltsPHvrX7qOE+EtWQDXu5MNHxe4\
F/re+86F1yn5lTPjVXXZfoFzf2ZvT7TalHXt3YrWYwMAYPPmNYAMQDnVn0kAVxmJI/tKV3FYrAFE\
s+Gxv7O63/Mx1h1n9JuWyhy300v/1RQGRY5pVhCyi7OMYhKnW2IxlNJ1NOTdBB9iGuH0Bq3pBgDL\
gnX90txZxVz9uDDzuQ8gvgCwIii2aCc4ZLJ7hIrXkpUjTwu2EspGGFip0krvpGgNV4fvhx7Cshal\
Flbn2XVkmRCrHVxp2SvGr10nWoAoWv5tNw95cPgOk3zpnrXWdey0IlLcJME6s9h5m0c0jNNoQ6cN\
L9p318EDUZKjLfoc22ovPYRRYPwx3wWU4F0ehChB+aepD+M4XCdB6ftnsDSAP0HT13te6cPI/4HD\
/igJruTtwFdfD1jd/LbfkyEAGN2SrJ7BdXjIE03OeaLyH6Y8MjmpeMLFit0G+YYmKBxY1s1RPy6G\
s3JyUH4BnZSYjA==
exehash=dc3a2e2c5fb5b0c0f2cb6abf3d87c6b0d8e524d0c73d768a1fe2ed683db3acc3

505.mcf_r=base=google-llvm9-m64:
# Last updated 2020-10-06 13:20:47
opthash=319a4f745b2fcf5d4be05ed3655203805df7a08787a1807040c242a093d4389d
baggage=
compiler_version=\
@eNqdUD1TwzAM3fMrPMLgOGnSkIaFu/BxXSgHPdaeY6uJqGPn/NH252PaAgMbi6TTe096EmnbzfvD\
69ty9bxZvaxjahKhuO7JHqxDo0mepVmak6vB+8k1jPXoh9Clwoxs+0WksZpQgWVR5xwKem4rtR/p\
ZM0HCJ9GEanzueyEuBFzUZazWTbndV2U5bas80LAYiaqIlt0RXWdrLntwTeEcyuGqqRB77Q5aKpQ\
hyPtdUjWgwUuyWgkqIZMxuExWWrnuVIg79E2hA1mhFOgEt2OHQDZxc3F9+mwjOFZxjrUyaMJWhLB\
tUTJPZCntiUXnPv4jDg2OMsUdqwXgn37syAH7s/2WJ28gYpbQP5T3v6sH4PyGNkNSW/vxqr8nfwH\
+QRZA5n3
compile_options=\
@eNrFUl1vmzAUfedXWH53SNRuUqOmEhDWshJsBZC6vVjUMatXg6nt9OvXz5CPJX2atG7FElg+F59z\
zz2ZalFT3fNaSA5UZ4VqzdQzVgtmqV63K6HpI9eifpnBMfTc1rgStx+djT9Bz4vwgkwB9O9Uw4cX\
Wglz7z9x4Xda/eTM+rWs2h9oMh655YvW2EpK/1a0PusBgJrPpwAxgNSOf6QAmuckjtwnm8dheQkA\
SkzHGX0wStstSoOywDQvCVnGeU4xibMFcZUN69Yze+e0c/18YieTMUD4BKCaJLFDO8ERU90L0lwq\
Vg2MDmwVUo2wqNaVa6JTorVcb843bqBKisoIp/jo2WpJiesCnBu11oxfQC+agiia/a0vm3tw+BWT\
YgaPTIKe8z0i5Zc0uMwddmzYgIZxFl3RaFfxhw5CD/ecpEgWyffY/fev/Ry0xjfFMqAEL4sgTNKk\
+LZraXAWemmSXb9DzgB6Bc1arnhtNtP7D2F5QwnO1W2v11z0mGx+J2k/WwCGwafzdwgQ7u/ZZ2Av\
5QOmPCg5YDzQ4ppdBMUVTZOwVymbbf+47GN/kPlfTZx78Q==
exehash=23fb0d3d0580a080573358003a26724a4e2aefdfc422f7ecb401ba465748dd67

520.omnetpp_r=base=google-llvm9-m64:
# Last updated 2020-10-06 13:22:45
opthash=9312b4aba34e97254a4c6aa900248bae4914fce45bc23000a78eee09bad4e079
baggage=
compiler_version=\
@eNqdULtuwzAM3P0VGttBlh0rruMuBdwHsjRFExTZAplSbDWyZOiR5POr5tEO3bqQBO+OPBI163Wz\
+Xh6X84Xr5vF2yqmOgHFdIf2wjppNMqzNEtzdNN7P7qakE76PrQpmIFsv4k4VqNUwpKoc04CPreV\
2g94tOZTgE+jCFX5lLcAdzAFSieTbMqqqqB0S6u8ADGbQFlks7Yob5MVs53wNWLMQl9SHPROm4PG\
SupwxJ0Oyaq3gnE0GC5UjUbj5DGZa+eZUoI/Slsj0ptBnALm0u3IQUhycXPxfTosI/IsI63UybMJ\
miNgmkvOvEAvTYMuOPPxGXFscJYo2ZIOgFz9WcF75s/2SJUshYpbBP+nvPlZPwTlZWTXKL1/GEr6\
O/kP8gWTApqn
compile_options=\
@eNrFUt1umzAUvucpjnxbOSTqNmlRUykQr2Uj2AqgZbtBFEzrFWxkO926p59DSJter92MhC0f2+f7\
S5TEXXnPG9FyUL0VSpq5Z6wWlS30TtZCFw9ci+ZxgabIc0vjjrj15OP0PfK8kK7ZHJB/pzo+/HAt\
zL3/kwu/1+oHr6zftKW8xbPpxH2+kMaWbevfCOlX+8LZGeDuwzvAFWB1RDBRgFcpI6GbkhUJ8ivA\
kRHdri2t0n7vppr3p3tu3amat+7C1yi7LhKSBXkUr8hmfKlY5hkt0pyxDUnTgjKSrBmAa171u4W9\
c1S5/nVuZ7MpYHoOuGERcdVecFyp/hFr3qqqHOC5olRYdcLiRpeOc6+EtFwf9g/i4bIVpRHyFsYx\
woiZIwsXRu10xS+RF84h3G4Xf6/g8SkafKYsW6AXgiLPuRSy/FO8vEpd7aW4QzUgSXhdHA+8hdrI\
oweELIvW0Xfi2ry1+AMzss02y4LRTbYMojjKvh0FGMxAXhwlX14lw6PR/yBR+Dc4K2remEPPC3Wz\
x2ku4WQ82w8wpCNevUrO/oOLdA/+pOMT/ZEXzfeJP4n7H5Xri9Q=
exehash=540586ac943c2c74de7b02c9656a93bf8b4fb557a851ea30caf3fd83d4d80d16

523.xalancbmk_r=base=google-llvm9-m64:
# Last updated 2020-10-06 13:27:07
opthash=0a92dc1f20ac09ffcdb93f6318d22b8b2059da285053a9ac4ad37c5bd6c2d29a
baggage=
compiler_version=\
@eNqdULtuwzAM3P0VGttBlh0rruMuBdwHsjRFExTZAplSbDWyZOiR5POr5tEO3bqQBO+OPBI163Wz\
+Xh6X84Xr5vF2yqmOgHFdIf2wjppNMqzNEtzdNN7P7qakE76PrQpmIFsv4k4VqNUwpKoc04CPreV\
2g94tOZTgE+jCFX5lLcAdzAFSieTbMqqqqB0S6u8ADGbQFlks7Yob5MVs53wNWLMQl9SHPROm4PG\
SupwxJ0Oyaq3gnE0GC5UjUbj5DGZa+eZUoI/Slsj0ptBnALm0u3IQUhycXPxfTosI/IsI63UybMJ\
miNgmkvOvEAvTYMuOPPxGXFscJYo2ZIOgFz9WcF75s/2SJUshYpbBP+nvPlZPwTlZWTXKL1/GEr6\
O/kP8gWTApqn
compile_options=\
@eNrtVEtvnDAQvvMrLK6Rl02TVmqUjeQFd0MK2OJR0V4s4vUmbgAjzObRX18DIiFtpR6atJcaATPz\
DWYe3zhSNayKG7GTpQCq6aSq9Ymlu1byjrX7eitbditauXtY2UvbMqI2LkZevF++tS3LJSE9AbZz\
rSoxPOBW6hvnTkinadVXwTtnVxb1FTxcLszlyFp3RVk6l7J2eA8cHABYvTsGkAOopggWCkAvodg1\
r8jD62wDjIQoZRFh6XmMkZcYQ44CFDE/CnHIwmTDAoI8HAPoL8x9L1ouNH+SnK2qnmuOrJpyZtLF\
/Uzbd7J0Qn0VqGJr0nb8OhSVah9+dEnbotZcjT5c1be9Q2Fy4yZbXu63woRKY3LB8jCgKE76EB8N\
WeoHkzqCyaQmKD92Z8qbSfZIOImfUOB7KCXDV2Y7liV4qghOErTBU1GGejKUpYQlGaWxQRmhOAqp\
qW3Fm/2quzb9Fu39UXd4uASQHAG4oz42aCMF5Kp5gK0oFS+GHhmwVlBVsoO7tjCNb5SsO9GO9pFB\
sChloWV9BcAUQOBHWQ7AzEBN98GpVntT0zPbck+Am+erP6fUtBVZXxCaruxnDLMtQ1uXZh8CtEkM\
9pxtA7rGkXvOzAaPPv8J+DoEtC0ydoqmfuh/wabWr03IocOUxCla+4Gffp4oMPJzQHGexoj90of2\
7DKeH1/k6BvXX5nBb6Dal1ux0z+P46m67GPWZ2C2ngYGgGGeAu9FJvMf9Jv0wc/++FiK31FhyJpk\
/QkyOz6+A1f/SCI=
exehash=091e86ba7b18f4769f1bdf6080e841c0acb9341d75362682a82fb27572eac42f

525.x264_r=base=google-llvm9-m64:
# Last updated 2020-10-06 13:30:42
opthash=d2560d0064e4f7b634cb798566ba2d088f333e38fff2cc1dac730c82394f0180
baggage=
compiler_version=\
@eNqdUD1TwzAM3fMrPMLgOGnSkIaFu/BxXSgHPdaeY6uJqGPn/NH252PaAgMbi6TTe096EmnbzfvD\
69ty9bxZvaxjahKhuO7JHqxDo0mepVmak6vB+8k1jPXoh9Clwoxs+0WksZpQgWVR5xwKem4rtR/p\
ZM0HCJ9GEanzueyEuBFzUZazWTbndV2U5bas80LAYiaqIlt0RXWdrLntwTeEcyuGqqRB77Q5aKpQ\
hyPtdUjWgwUuyWgkqIZMxuExWWrnuVIg79E2hA1mhFOgEt2OHQDZxc3F9+mwjOFZxjrUyaMJWhLB\
tUTJPZCntiUXnPv4jDg2OMsUdqwXgn37syAH7s/2WJ28gYpbQP5T3v6sH4PyGNkNSW/vxqr8nfwH\
+QRZA5n3
compile_options=\
@eNrtVF1vmzAUfedXWLw7JE2abVGpBIS1bARbfEjrXhB1zOoVMLKdLd2vnyFJRybtad36AkjY+FjX\
5557fSLewLp4pCWrKOCtYryRK0MqwYjKxa7ZMpF/o4KVT7Y5NQ09lXqLnk/eTS9Nw/DQBq+AaT3w\
mvYfuGXy0fpOmdUK/pUSZZVV0XyBs+lEvxZrpCqqyrpnjUU6AMB6uQCQAMhP5084gOsE+54eorXv\
ZjcABtWWEr7NpSA6ht4d7C+Wi+53MLXoXolCDlcIr2veHOPlTpaiPMkwjv0kyRH2ow0+w9y71Efx\
2o/t6X52MV9cLt+8BUBzJO3OVg9aDyr2czWbTQFEcwBLHPgabRmFhLdPUNCKk6LPQoMNh7xmCpai\
0MK0nDWKisP6QWFYVKyQTKtw9hwZhVgrA64k3wlCr03DWwHPs/9W60Mc5H5AOLXNM+FNQ9fSw9n7\
0LlJNHZehB51/ci7zU8bXrEqpoG6NHAabILPvubyr0vUp+9/SmMnxyhOHTcIg/TupFJfLNMIg+jj\
C1wHAH+AeqfFLeWhIf5D//12JLji9x1fed1hVf2rOZ/bBYC+l8L1C/Qk6uJ4p756pvIKVe6ZDE4c\
cNHJbpz0Ng8Dt2NZ1cf8UdbdpME1Gm1xtMXRFkdbHG1xtMXRFkdbHG1xtMU/2+JPjfDg+Q==
exehash=90e131e60f6ddf720fe4cd28e7ca1619e7e26749196142e90190d5f9c80b9605

531.deepsjeng_r=base=google-llvm9-m64:
# Last updated 2020-10-06 13:31:20
opthash=19189e363370ab472fa55c173dfce07864ea238089ec76b71423628cbbedfcd3
baggage=
compiler_version=\
@eNqdULtuwzAM3P0VGttBlh0rruMuBdwHsjRFExTZAplSbDWyZOiR5POr5tEO3bqQBO+OPBI163Wz\
+Xh6X84Xr5vF2yqmOgHFdIf2wjppNMqzNEtzdNN7P7qakE76PrQpmIFsv4k4VqNUwpKoc04CPreV\
2g94tOZTgE+jCFX5lLcAdzAFSieTbMqqqqB0S6u8ADGbQFlks7Yob5MVs53wNWLMQl9SHPROm4PG\
SupwxJ0Oyaq3gnE0GC5UjUbj5DGZa+eZUoI/Slsj0ptBnALm0u3IQUhycXPxfTosI/IsI63UybMJ\
miNgmkvOvEAvTYMuOPPxGXFscJYo2ZIOgFz9WcF75s/2SJUshYpbBP+nvPlZPwTlZWTXKL1/GEr6\
O/kP8gWTApqn
compile_options=\
@eNrFUs1uozAYvPMUlq+VQ6JUlTZqKhHibekCtgJI6V4QIaZ1Czaynf49fQ0h2/S2UttdWwKbMf5m\
5ptYCtQUD6ziNQOyNVwKPXO0Ubw0udqJLVf5I1O8epnDMXTsUtsjdj36MT6FjuOTiM4AdO9kw/oH\
2nL94D4x7rZK3rPSuFVdiFs0GY/sdLnQpqhrd8OFW3bAyQlAzdkpQCVA8sBgJAFaJhT79hUv8SK7\
7PaRF4Z5hCOyuhng3MtSkicZpSucJDmhOI4oAPbGst3NzZ3lz9Tz1EwmY4DIFKCKBtiiLWeolO0L\
UqyWZdHXtKCQSDbcoEoVVkgruTBM7b/vHUFFzQvNxS0YxkAjpFYBONdyp0p2AR1/Bvz1ev55Ww5X\
kcU1oekcfnAJOtZ6n2Y/Q+8ysdhHx3p0gWP/Kn8/8JcWQofsy9I0iILf2P773Y72dPE6XXk5JavU\
WwRhkN4cVPUOQycM4l9fkrahe/8gJugVNLt6yyq9r3kuNx1PfQGOxntPAehbHi6/JDz/oYukI39U\
8Y/8QRfJuhgfZfgNWxBsyw==
exehash=d32f5e136a23af00ba4a5e3ddeb28392dacd8604595ac02f9a2c5c23e078556e

541.leela_r=base=google-llvm9-m64:
# Last updated 2020-10-06 13:32:18
opthash=9f42b21be5d3f2d91525ad1a4a725eb886bc010b370bf6a7ce0b4bb814dac439
baggage=
compiler_version=\
@eNqdULtuwzAM3P0VGttBlh0rruMuBdwHsjRFExTZAplSbDWyZOiR5POr5tEO3bqQBO+OPBI163Wz\
+Xh6X84Xr5vF2yqmOgHFdIf2wjppNMqzNEtzdNN7P7qakE76PrQpmIFsv4k4VqNUwpKoc04CPreV\
2g94tOZTgE+jCFX5lLcAdzAFSieTbMqqqqB0S6u8ADGbQFlks7Yob5MVs53wNWLMQl9SHPROm4PG\
SupwxJ0Oyaq3gnE0GC5UjUbj5DGZa+eZUoI/Slsj0ptBnALm0u3IQUhycXPxfTosI/IsI63UybMJ\
miNgmkvOvEAvTYMuOPPxGXFscJYo2ZIOgFz9WcF75s/2SJUshYpbBP+nvPlZPwTlZWTXKL1/GEr6\
O/kP8gWTApqn
compile_options=\
@eNrFUl1v2jAUfc+vuPIrMgG1mzRUKkHIWLYQWySR2F6iNDjgkdiRbdaPX18TQgsvfVm32pJt+Vz7\
nnvuiaTAdb5jJa8YyMZwKfTI0UbxwmRqL9ZcZX+Y4uXjGA2QY4/ahthz/8vgE3IcjyzoCJC7lTVr\
F7zmeufeM+42Sv5mhXHLKhcbPBz07XS50CavKveOC7c4AL0e4PrzNeACsDwx6EvAs5j6nt2imT9N\
54CDfneXTdKEZHFK6dKP44xQP1pQAPtN0ezHZmtJM/VwZYbDAWByBbikgW/RhjNcyOYRK1bJIm8T\
WVBILGtucKlyy76RXBimjvdHGXBe8VxzsYFudDRCamnDjZZ7VbBb5Hgj8Far8d9rcfqKTL8TmozR\
hTTIsXp7NP0aTuaxxS5latGpH3nfslPA27ohhxxz0SRYBL98++Bfy9hy9FfJcpJRskwm0yAMkp+n\
UlpZkRMG0Y938VXXsv/gDfwE9b5as1Ifc97IuwNPfQtn47WRAG2fw9m7OOYDukgO5M8yvpTf1UXS\
g3fPjPsMQgZl0A==
exehash=b7245d99dcab9583840399718d3888d2977838df6b2ab84680aa40803e2395c8

548.exchange2_r=base=google-llvm9-m64:
# Last updated 2020-10-06 13:41:07
opthash=e8d893b3a9800715963ac6164832e7d379858a3ae96a5300349298caf31d8e0e
baggage=
compiler_version=\
@eNqdUD1TwzAM3fMrPMLgOGnckIaFu0C5LpSjPdaeY6uJqWPn/NH252OaAgMbi6TTe096Elo2u/en\
t81q/bJbv25jqhOumO7QEayTRqM8S7M0Rze996OrCemk70ObcjOQ/RcRx2qUCiyJOuckx1NbqeOA\
R2s+gPs0ilCVz0XL+R2fc0pns2zOqqqgdE+rvOCwmPGyyBZtUd4mW2Y78DVizPK+pDjogzYnjZXU\
4Yw7HZJtb4EJNBgBqkajcfKcrLTzTCkQj9LWiPRmgEvAQroDOYEkVzdX35fDMiInGWmlTpYmaIE4\
00IK5gE9Nw264szHZ8SxwVmiZEs6zsm3PwuiZ36yR6pkAypuAfFPefOzfgjKy8iuUXr/MJT0d/If\
5BNeWJn6
compile_options=\
@eNq1UtFOgzAUfecrGt4LW6YmWzaTjTFFGW0GJOoLQVZcHdCm7XT69ZaxzWl8MBFLUi69l3PPPacB\
q2CZrklOCwIYV5RVcmBIJWimErGpllQkL0TQ/G1kdkxDh1KX6Njqd85Nw5hhPACm5CTjHMBpiF1H\
v4KpO4mv9t/JOI5QEsYYL9wwTBB2gzk+5Hx8cQaGkm1ERi4BZMfYyjmn72Rp5f2taegmDo5n/vgq\
HJnf2uyyEzdwrpMvBT/23RW7d9FinGC0iMYTz/ei++MvNR3TcNC8nspesZLsNrikcm2/EmpzwZ5J\
puy8SKsn2O1Y+rFpJVVaFPYjrZoEgKUeC2b1QHtRLaYPM74ZqZVWlYhtT3W7HQBRD8Ace67eKwZZ\
SRXMRapbckYrRURz3hgC04Kmkmr8g0qa6wDMnNFfuTY4aHKDcKTFOCXeqvio7oIjb+49uLq0NUF+\
ZavvBbct2NqsFs3UYO+g3BRLkssGfMgeazryEpysT0sA2PnlT1vw/f8cQTXDE+jjjHvyKK6v2sk9\
+wD/YWma
exehash=a9666eb378796b65d87ecec3d890bba648a10b921db24a0e4016db44683a2db1

557.xz_r=base=google-llvm9-m64:
# Last updated 2020-10-06 13:42:17
opthash=09e8f15e7814f205d0f884f867be62184241b132015bdaad242cf9a03326fe58
baggage=
compiler_version=\
@eNqdUD1TwzAM3fMrPMLgOGnSkIaFu/BxXSgHPdaeY6uJqGPn/NH252PaAgMbi6TTe096EmnbzfvD\
69ty9bxZvaxjahKhuO7JHqxDo0mepVmak6vB+8k1jPXoh9Clwoxs+0WksZpQgWVR5xwKem4rtR/p\
ZM0HCJ9GEanzueyEuBFzUZazWTbndV2U5bas80LAYiaqIlt0RXWdrLntwTeEcyuGqqRB77Q5aKpQ\
hyPtdUjWgwUuyWgkqIZMxuExWWrnuVIg79E2hA1mhFOgEt2OHQDZxc3F9+mwjOFZxjrUyaMJWhLB\
tUTJPZCntiUXnPv4jDg2OMsUdqwXgn37syAH7s/2WJ28gYpbQP5T3v6sH4PyGNkNSW/vxqr8nfwH\
+QRZA5n3
compile_options=\
@eNrtVMFymzAQvfMVGu4ydpy6rSdkxsaKTWsjjY0zSS4aWRa1aoQYgdskX1+BYxeaY9P2UhgkrXZZ\
Le+9JdIZVGwvEpkKoPNS6qwYOkVpJC+pOWRbaeg3YWTy5Ltd17HLwobYdedjd+A6ToAXZAhcb6eV\
qAe4lcXe+y6klxv9VfDSS1KWfYG9bsfensyKkqWpt5GZxysHgGpwCSAHUJ/O72gAJyuCAjtFEzRe\
T19sOlrHmI7vY4SXE7T0u4+9i/7lu8H7DzZgNrpFNMDRTTilM793emWBFjTEJ+vuoZVqtSZkiVYr\
igmKFgTAsGOfIhecKqGo1JW1Y/DCzlwrpTO7SOUmfVbMY7lsWNXQMF9F853g+4ZdSJVbyH9ubEVa\
slbChmEsUoLrrTAAWMR4fvDLnWVHmMd+2et1AcR9ABMSIuvNpYBc50/QiFRzVmNqnZmGWskSJoZZ\
mnIts9Kmq/ePfEOWSlZIy0nregFsTixP4KrQB8PFtesEQxAE/u8yf8yDx58wiX23JQPXscoKyPpm\
PpqurK8tido7RlEwo62A/xoRxnVwBSqJw0X4gCwyf1owNRnoLl6OKMHLeDQO52F8f6akko7rzMPo\
8xv8KgB8BuqQbkVSHOX5F7rhlyPBld5U9RbXrT45KxeAWtbzyRu0B67yBCeJn+v4BxTXlTRObNRS\
fyxeVx3caN8fIVMInQ==
exehash=e681821d3164961f8704c52ddb7bf30a309dc908a00fe3b31182a32eae3a45dd

999.specrand_ir=base=google-llvm9-m64:
# Last updated 2020-10-06 13:42:19
opthash=cc73dca0e111de36e5db7c094738919d97031c4d401777346ee47e5da16046de
baggage=
compiler_version=\
@eNqdUD1TwzAM3fMrPMLgOGnSkIaFu/BxXSgHPdaeY6uJqGPn/NH252PaAgMbi6TTe096EmnbzfvD\
69ty9bxZvaxjahKhuO7JHqxDo0mepVmak6vB+8k1jPXoh9Clwoxs+0WksZpQgWVR5xwKem4rtR/p\
ZM0HCJ9GEanzueyEuBFzUZazWTbndV2U5bas80LAYiaqIlt0RXWdrLntwTeEcyuGqqRB77Q5aKpQ\
hyPtdUjWgwUuyWgkqIZMxuExWWrnuVIg79E2hA1mhFOgEt2OHQDZxc3F9+mwjOFZxjrUyaMJWhLB\
tUTJPZCntiUXnPv4jDg2OMsUdqwXgn37syAH7s/2WJ28gYpbQP5T3v6sH4PyGNkNSW/vxqr8nfwH\
+QRZA5n3
compile_options=\
@eNrFkl1vgjAUhu/5FSe9r2hclsyoiSJzbChEMdl2Q7CW2Qktaes29+tXIBj1dl80gabncM7T97xz\
wXGe7GjKMgqi0Exw1bOUlozoWO75hsn4jUqWHgaojSyzVSbF7Fs37S6yLCeYhT1A9lbktHrhDVM7\
+50yu5DilRJtp1nCX3Cn3TLLZlzpJMvsNeM2KQOA8+srwASwaPq3BODJMnQd85lP3PFqCthTBSUy\
4RtMRJ4LDmB+JMV+oLcGksqPru502oCDLuA09FwTLRg1ycUBS5oJklSlTZALLHKmcSoTQ1sIxjWV\
9Xl9bZxkLFHMoJ09NVLshwYX+krsJaFDZDk9cJzBdwWo6wTj+yCMBuhMDWQZgZ1wdeuPpksTO1em\
io7duXMXNwmXUiErKGuHkTfznl2T8Nu6VUzuY7QYxWGwiEZjz/eipwa9UhBZvjd/+AHjAP6EfJ9t\
aKrqKf2BKS5aQl+sS141PLPLcYAA1XT9yQ+4JCjrOM2kjxz/MOKK5KTjCUt12WBVGvnExV/bEWh/
exehash=adb4421a94b23361bcbbd963beb2c2e77a280264ea9ac502601a3b0e846a9367

